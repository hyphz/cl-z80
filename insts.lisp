(in-package #:cl-z80)

;; special funcs
(definst '(org number)
  (setq *org* *number*)
  '())

(definst '(label sym lst)
  (set-label-address *sym* (+ *org* *ip*))
  (push-namespace *sym*)
  (loop for i in *lst* do
       (asm-inst i))
  (pop-namespace))

(definst '(db lst) *lst*)

(definst '(dw lst)
    (loop for i in *lst* append
         (if (numberp i)
             (list (low-word i) (high-word i))
             (list (list 'low-word i) (list 'high-word i)))))

;; http://nemesis.lonestar.org/computers/tandy/software/apps/m4/qd/opcodes.html 
;; 8 bit transfer instructions
(definst '(ld (bc) a) (list #x02))
(definst '(ld (de) a) (list #x12))
(definst '(ld (hl) a) (list #x77))
(definst '(ld (hl) b) (list #x70))
(definst '(ld (hl) byte) (list #x36 *byte*))
(definst '(ld (hl) c) (list #x71))
(definst '(ld (hl) d) (list #x72))
(definst '(ld (hl) e) (list #x73))
(definst '(ld (hl) h) (list #x74))
(definst '(ld (hl) l) (list #x75))
(definst '(ld (ix index) a) (list #xdd #x77 *index*))
(definst '(ld (ix index) b) (list #xdd #x70 *index*))
(definst '(ld (ix index) byte) (list #xdd #x36 *index* *byte*)) ; #x36=#x76
(definst '(ld (ix index) c) (list #xdd #x71 *index*))
(definst '(ld (ix index) d) (list #xdd #x72 *index*))
(definst '(ld (ix index) e) (list #xdd #x73 *index*))
(definst '(ld (ix index) h) (list #xdd #x74 *index*))
(definst '(ld (ix index) l) (list #xdd #x75 *index*))
(definst '(ld (iy index) a) (list #xfd #x77 *index*))
(definst '(ld (iy index) b) (list #xfd #x70 *index*))
(definst '(ld (iy index) byte) (list #xfd #x36 *index* *byte*)) ; #x36=#x76
(definst '(ld (iy index) c) (list #xfd #x71 *index*))
(definst '(ld (iy index) d) (list #xfd #x72 *index*))
(definst '(ld (iy index) e) (list #xfd #x73 *index*))
(definst '(ld (iy index) h) (list #xfd #x74 *index*))
(definst '(ld (iy index) l) (list #xfd #x75 *index*))
(definst '(ld (word) a) (list #x32 *lword* *hword*))
(definst '(ld a (bc)) (list #x0a))
(definst '(ld a (de)) (list #x1a))
(definst '(ld a (hl)) (list #x7e))
(definst '(ld a (ix index)) (list #xdd #x7e *index*))
(definst '(ld a (iy index)) (list #xfd #x7e *index*))
(definst '(ld a (word)) (list #x3a *lword* *hword*))
(definst '(ld a a) (list #x7f))
(definst '(ld a b) (list #x78))
(definst '(ld a byte) (list #x3e *byte*))
(definst '(ld a c) (list #x79))
(definst '(ld a d) (list #x7a))
(definst '(ld a e) (list #x7b))
(definst '(ld a h) (list #x7c))
(definst '(ld a l) (list #x7d))
(definst '(ld b (hl)) (list #x46))
(definst '(ld b (ix index)) (list #xdd #x46 *index*))
(definst '(ld b (iy index)) (list #xfd #x46 *index*))
(definst '(ld b a) (list #x47))
(definst '(ld b b) (list #x40))
(definst '(ld b byte) (list #x06 *byte*))
(definst '(ld b c) (list #x41))
(definst '(ld b d) (list #x42))
(definst '(ld b e) (list #x43))
(definst '(ld b h) (list #x44))
(definst '(ld b l) (list #x45))
(definst '(ld c (hl)) (list #x4e))
(definst '(ld c (ix index)) (list #xdd #x4e *index*))
(definst '(ld c (iy index)) (list #xfd #x4e *index*))
(definst '(ld c a) (list #x4f))
(definst '(ld c b) (list #x48))
(definst '(ld c byte) (list #x0e *byte*))
(definst '(ld c c) (list #x49))
(definst '(ld c d) (list #x4a))
(definst '(ld c e) (list #x4b))
(definst '(ld c h) (list #x4c))
(definst '(ld c l) (list #x4d))
(definst '(ld d (hl)) (list #x56))
(definst '(ld d (ix index)) (list #xdd #x56 *index*))
(definst '(ld d (iy index)) (list #xfd #x56 *index*))
(definst '(ld d a) (list #x57))
(definst '(ld d b) (list #x50))
(definst '(ld d byte) (list #x16 *byte*))
(definst '(ld d c) (list #x51))
(definst '(ld d d) (list #x52))
(definst '(ld d e) (list #x53))
(definst '(ld d h) (list #x54))
(definst '(ld d l) (list #x55))
(definst '(ld e (hl)) (list #x5e))
(definst '(ld e (ix index)) (list #xdd #x5e *index*))
(definst '(ld e (iy index)) (list #xfd #x5e *index*))
(definst '(ld e a) (list #x5f))
(definst '(ld e b) (list #x58))
(definst '(ld e byte) (list #x1e *byte*))
(definst '(ld e c) (list #x59))
(definst '(ld e d) (list #x5a))
(definst '(ld e e) (list #x5b))
(definst '(ld e h) (list #x5c))
(definst '(ld e l) (list #x5d))
(definst '(ld h (hl)) (list #x66))
(definst '(ld h (ix index)) (list #xdd #x66 *index*))
(definst '(ld h (iy index)) (list #xfd #x66 *index*))
(definst '(ld h a) (list #x67))
(definst '(ld h b) (list #x60))
(definst '(ld h byte) (list #x26 *byte*))
(definst '(ld h c) (list #x61))
(definst '(ld h d) (list #x62))
(definst '(ld h e) (list #x63))
(definst '(ld h h) (list #x64))
(definst '(ld h l) (list #x65))
(definst '(ld l (hl)) (list #x6e))
(definst '(ld l (ix index)) (list #xdd #x6e *index*))
(definst '(ld l (iy index)) (list #xfd #x6e *index*))
(definst '(ld l a) (list #x6f))
(definst '(ld l b) (list #x68))
(definst '(ld l byte) (list #x2e *byte*))
(definst '(ld l c) (list #x69))
(definst '(ld l d) (list #x6a))
(definst '(ld l e) (list #x6b))
(definst '(ld l h) (list #x6c))
(definst '(ld l l) (list #x6d))

;; 16 bit transfer instructions
(definst '(ld bc word) (list #x01 *lword* *hword*))
(definst '(ld de word) (list #x11 *lword* *hword*))
(definst '(ld hl word) (list #x21 *lword* *hword*))
(definst '(ld sp word) (list #x31 *lword* *hword*))
(definst '(ld ix word) (list #xdd #x21 *lword* *hword*))
(definst '(ld iy word) (list #xfd #x21 *lword* *hword*))
(definst '(ld hl (word)) (list #x2a *lword* *hword*))
(definst '(ld bc (word)) (list #xed #x4b *lword* *hword*))
(definst '(ld de (word)) (list #xed #x5b *lword* *hword*))
;; (definst '(ld hl (word)) (list #xed #x6b *lword* *hword*))
(definst '(ld sp (word)) (list #xed #x7b *lword* *hword*))
(definst '(ld ix (word)) (list #xdd #x2a *lword* *hword*))
(definst '(ld iy (word)) (list #xfd #x2a *lword* *hword*))
(definst '(ld (word) hl) (list #x22 *lword* *hword*))
(definst '(ld (word) bc) (list #xed #x43 *lword* *hword*))
(definst '(ld (word) de) (list #xed #x53 *lword* *hword*))
;; (definst '(ld (word) hl) (list #xed #x6b *lword* *hword*))
(definst '(ld (word) ix) (list #xdd #x22 *lword* *hword*))
(definst '(ld (word) iy) (list #xdd #x22 *lword* *hword*))
(definst '(ld (word) sp) (list #xed #x73 *lword* *hword*))
(definst '(ld sp hl) (list #xf9))
(definst '(ld sp ix) (list #xdd #xf9))
(definst '(ld sp iy) (list #xfd #xf9))

;; register exchange instructions
(definst '(ex de hl) (list #xeb))
(definst '(ex (sp) hl) (list #xe3))
(definst '(ex (sp) ix) (list #xdd #xe3))
(definst '(ex (sp) iy) (list #xfd #xe3))
(definst '(ex af af) (list #x08))
(definst '(exx) (list #xd9))

;; add byte instructions
(definst '(add a a) (list #x87))
(definst '(add a b) (list #x80))
(definst '(add a c) (list #x81))
(definst '(add a d) (list #x82))
(definst '(add a e) (list #x83))
(definst '(add a h) (list #x84))
(definst '(add a l) (list #x85))
(definst '(add a (hl)) (list #x86))
(definst '(add a (ix index)) (list #xdd #x86 *index*))
(definst '(add a (iy index)) (list #xfd #x86 *index*))
(definst '(add a byte) (list #xc6 *byte*))

;; add byte carry-in instructions
(definst '(adc a a) (list #x8f))
(definst '(adc a b) (list #x88))
(definst '(adc a c) (list #x89))
(definst '(adc a d) (list #x8a))
(definst '(adc a e) (list #x8b))
(definst '(adc a h) (list #x8c))
(definst '(adc a l) (list #x8d))
(definst '(adc a (hl)) (list #x8e))
(definst '(adc a (ix index)) (list #xdd #x8e *index*))
(definst '(adc a (iy index)) (list #xfd #x8e *index*))
(definst '(adc a byte) (list #xce *byte*))

;; substract byte instructions
(definst '(sub a) (list #x97))
(definst '(sub b) (list #x90))
(definst '(sub c) (list #x91))
(definst '(sub d) (list #x92))
(definst '(sub e) (list #x93))
(definst '(sub h) (list #x94))
(definst '(sub l) (list #x95))
(definst '(sub (hl)) (list #x96))
(definst '(sub (ix index)) (list #xdd #x96 *index*))
(definst '(sub (iy index)) (list #xfd #x96 *index*))
(definst '(sub byte) (list #xd6 *byte*))

;; substract byte with borrow-in instructions
(definst '(sbc a) (list #x9f))
(definst '(sbc b) (list #x98))
(definst '(sbc c) (list #x99))
(definst '(sbc d) (list #x9a))
(definst '(sbc e) (list #x9b))
(definst '(sbc h) (list #x9c))
(definst '(sbc l) (list #x9d))
(definst '(sbc (hl)) (list #x9e))
(definst '(sbc (ix index)) (list #xdd #x9e *index*))
(definst '(sbc (iy index)) (list #xfd #x9e *index*))
(definst '(sbc byte) (list #xde *byte*))

;; double byte add instructions
(definst '(add hl bc) (list #x09))
(definst '(add hl de) (list #x19))
(definst '(add hl hl) (list #x29))
(definst '(add hl sp) (list #x39))
(definst '(add ix bc) (list #xdd #x09))
(definst '(add ix de) (list #xdd #x19))
(definst '(add ix ix) (list #xdd #x29))
(definst '(add ix sp) (list #xdd #x39))
(definst '(add iy bc) (list #xfd #x09))
(definst '(add iy de) (list #xfd #x19))
(definst '(add iy iy) (list #xfd #x29))
(definst '(add iy sp) (list #xfd #x39))

;; double byte add with carry-in instructions
(definst '(adc) (list #xed #x4a))
(definst '(adc hl de) (list #xed #x5a))
(definst '(adc hl hl) (list #xed #x6a))
(definst '(adc hl sp) (list #xed #x7a))

;; control instructions
(definst '(di) (list #xf3))
(definst '(ei) (list #xfb))
(definst '(im 0) (list #xed #x46))
(definst '(im 1) (list #xed #x56))
(definst '(im 2) (list #xed #x5e))
(definst '(ld a i) (list #xed #x57))
(definst '(ld i a) (list #xed #x47))
(definst '(ld a r) (list #xed #x5f))
(definst '(ld r a) (list #xed #x4f))
(definst '(nop) (list #x00))
(definst '(halt) (list #x76))

;; increment byte instructions
(definst '(inc a) (list #x3c))
(definst '(inc b) (list #x04))
(definst '(inc c) (list #x0c))
(definst '(inc d) (list #x14))
(definst '(inc e) (list #x1c))
(definst '(inc h) (list #x24))
(definst '(inc l) (list #x2c))
(definst '(inc (hl)) (list #x34))
(definst '(inc (ix index)) (list #xdd #x34 *index*))
(definst '(inc (iy index)) (list #xfd #x34 *index*))

;; decrement byte instructions
(definst '(dec a) (list #x3d))
(definst '(dec b) (list #x05))
(definst '(dec c) (list #x0d))
(definst '(dec d) (list #x15))
(definst '(dec e) (list #x1d))
(definst '(dec h) (list #x25))
(definst '(dec l) (list #x2d))
(definst '(dec (hl)) (list #x35))
(definst '(dec (ix index)) (list #xdd #x35 *index*))
(definst '(dec (iy index)) (list #xfd #x35 *index*))

;; increment register pair instructions
(definst '(inc bc) (list #x03))
(definst '(inc de) (list #x13))
(definst '(inc hl) (list #x23))
(definst '(inc sp) (list #x33))
(definst '(inc ix) (list #xdd #x23))
(definst '(inc iy) (list #xfd #x23))

;; decrement register pair instructions
(definst '(dec bc) (list #x0b))
(definst '(dec de) (list #x1b))
(definst '(dec hl) (list #x2b))
(definst '(dec sp) (list #x3b))
(definst '(dec ix) (list #xdd #x2b))
(definst '(dec iy) (list #xfd #x2b))

;; special accumulator and flag instructions
(definst '(daa) (list #x27))
(definst '(cpl) (list #x2f))
(definst '(scf) (list #x37))
(definst '(ccf) (list #x3f))
(definst '(neg) (list #xed #x44))

;; rotate instructions
(definst '(rlca) (list #x07))
(definst '(rrca) (list #x0f))
(definst '(rla) (list #x17))
(definst '(rra) (list #x1f))
(definst '(rld) (list #xed #x6f))
(definst '(rrd) (list #xed #x67))
(definst '(rlc a) (list #xcb #x07))
(definst '(rlc b) (list #xcb #x00))
(definst '(rlc c) (list #xcb #x01))
(definst '(rlc d) (list #xcb #x02))
(definst '(rlc e) (list #xcb #x03))
(definst '(rlc h) (list #xcb #x04))
(definst '(rlc l) (list #xcb #x05))
(definst '(rlc (hl)) (list #xcb #x06))
(definst '(rlc (ix index)) (list #xdd #xcb *index* #x06))
(definst '(rlc (iy index)) (list #xfd #xcb *index* #x06))
(definst '(rl a) (list #xcb #x17))
(definst '(rl b) (list #xcb #x10))
(definst '(rl c) (list #xcb #x11))
(definst '(rl d) (list #xcb #x12))
(definst '(rl e) (list #xcb #x13))
(definst '(rl h) (list #xcb #x14))
(definst '(rl l) (list #xcb #x15))
(definst '(rl (hl)) (list #xcb #x16))
(definst '(rl (ix index)) (list #xdd #xcb *index* #x16))
(definst '(rl (iy index)) (list #xfd #xcb *index* #x16))
(definst '(rrc a) (list #xcb #x0f))
(definst '(rrc b) (list #xcb #x08))
(definst '(rrc c) (list #xcb #x09))
(definst '(rrc d) (list #xcb #x0a))
(definst '(rrc e) (list #xcb #x0b))
(definst '(rrc h) (list #xcb #x0c))
(definst '(rrc l) (list #xcb #x0d))
(definst '(rrc (hl)) (list #xcb #x0e))
(definst '(rrc (ix index)) (list #xdd #xcb *index* #x0e))
(definst '(rrc (iy index)) (list #xfd #xcb *index* #x0e))
(definst '(rl a) (list #xcb #x1f))
(definst '(rl b) (list #xcb #x18))
(definst '(rl c) (list #xcb #x19))
(definst '(rl d) (list #xcb #x1a))
(definst '(rl e) (list #xcb #x1b))
(definst '(rl h) (list #xcb #x1c))
(definst '(rl l) (list #xcb #x1d))
(definst '(rl (hl)) (list #xcb #x1e))
(definst '(rl (ix index)) (list #xdd #xcb *index* #x1e))
(definst '(rl (iy index)) (list #xfd #xcb *index* #x1e))

;; logical byte instructions
(definst '(and a) (list #xa7))
(definst '(and b) (list #xa0))
(definst '(and c) (list #xa1))
(definst '(and d) (list #xa2))
(definst '(and e) (list #xa3))
(definst '(and h) (list #xa4))
(definst '(and l) (list #xa5))
(definst '(and (hl)) (list #xa6))
(definst '(and (ix index)) (list #xdd #xa6 *index*))
(definst '(and (iy index)) (list #xfd #xa6 *index*))
(definst '(and byte) (list #xe6 *byte*))
(definst '(xor a) (list #xaf))
(definst '(xor b) (list #xa8))
(definst '(xor c) (list #xa9))
(definst '(xor d) (list #xaa))
(definst '(xor e) (list #xab))
(definst '(xor h) (list #xac))
(definst '(xor l) (list #xad))
(definst '(xor (hl)) (list #xae))
(definst '(xor (ix index)) (list #xdd #xae *index*))
(definst '(xor (iy index)) (list #xfd #xae *index*))
(definst '(xor byte) (list #xee *byte*))
(definst '(or a) (list #xb7))
(definst '(or b) (list #xb0))
(definst '(or c) (list #xb1))
(definst '(or d) (list #xb2))
(definst '(or e) (list #xb3))
(definst '(or h) (list #xb4))
(definst '(or l) (list #xb5))
(definst '(or (hl)) (list #xb6))
(definst '(or (ix index)) (list #xdd #xb6 *index*))
(definst '(or (iy index)) (list #xfd #xb6 *index*))
(definst '(or byte) (list #xf6 *byte*))
(definst '(cp a) (list #xbf))
(definst '(cp b) (list #xb8))
(definst '(cp c) (list #xb9))
(definst '(cp d) (list #xba))
(definst '(cp e) (list #xbb))
(definst '(cp h) (list #xbc))
(definst '(cp l) (list #xbd))
(definst '(cp (hl)) (list #xbe))
(definst '(cp (ix index)) (list #xdd #xbe *index*))
(definst '(cp (iy index)) (list #xfd #xbe *index*))
(definst '(cp byte) (list #xfe *byte*))
(definst '(cpi) (list #xed #xa1))
(definst '(cpir) (list #xed #xb1))
(definst '(cpd) (list #xed #xa9))
(definst '(cpdr) (list #xed #xb9))

;; branch control/program counter load instructions
(definst '(jp word) (list #xc3 *lword* *hword*))
(definst '(jp nz word) (list #xc2 *lword* *hword*))
(definst '(jp z word) (list #xca *lword* *hword*))
(definst '(jp nc word) (list #xd2 *lword* *hword*))
(definst '(jp c word) (list #xda *lword* *hword*))
(definst '(jp po word) (list #xe2 *lword* *hword*))
(definst '(jp pe word) (list #xea *lword* *hword*))
(definst '(jp p word) (list #xf2 *lword* *hword*))
(definst '(jp m word) (list #xfa *lword* *hword*))
(definst '(jp (hl)) (list #xe9))
(definst '(jp (ix)) (list #xdd #xe9))
(definst '(jp (iy)) (list #xfd #xe9))
(definst '(jr index) (list #x18 *index*))
(definst '(jr nz index) (list #x20 *index*))
(definst '(jr z index) (list #x28 *index*))
(definst '(jr nc index) (list #x30 *index*))
(definst '(jr c index) (list #x38 *index*))
(definst '(djnz index) (list #x10 *index*))
(definst '(call word) (list #xcd *lword* *hword*))
(definst '(call nz word) (list #xc4 *lword* *hword*))
(definst '(call z word) (list #xcc *lword* *hword*))
(definst '(call nc word) (list #xd4 *lword* *hword*))
(definst '(call c word) (list #xdc *lword* *hword*))
(definst '(call po word) (list #xe4 *lword* *hword*))
(definst '(call pe word) (list #xec *lword* *hword*))
(definst '(call p word) (list #xf4 *lword* *hword*))
(definst '(call m word) (list #xfc *lword* *hword*))
(definst '(ret) (list #xc9))
(definst '(ret nz) (list #xc0))
(definst '(ret z) (list #xc8))
(definst '(ret nc) (list #xd0))
(definst '(ret c) (list #xd8))
(definst '(ret po) (list #xe0))
(definst '(ret pe) (list #xe8))
(definst '(ret p) (list #xf0))
(definst '(ret m) (list #xf8))
(definst '(reti) (list #xed #x4d))
(definst '(retn) (list #xed #x45))
(definst '(rst #x0) (list #xc7))
(definst '(rst #x8) (list #xcf))
(definst '(rst #x10) (list #xd7))
(definst '(rst #x18) (list #xdf))
(definst '(rst #x20) (list #xe7))
(definst '(rst #x28) (list #xef))
(definst '(rst #x30) (list #xf7))
(definst '(rst #x38) (list #xff))

;; stack operation instructions
(definst '(push bc) (list #xc5))
(definst '(push de) (list #xd5))
(definst '(push hl) (list #xe5))
(definst '(push af) (list #xf5))
(definst '(push ix) (list #xdd #xe5))
(definst '(push iy) (list #xfd #xe5))
(definst '(pop bc) (list #xc1))
(definst '(pop de) (list #xd1))
(definst '(pop hl) (list #xe1))
(definst '(pop af) (list #xf1))
(definst '(pop ix) (list #xdd #xe1))
(definst '(pop iy) (list #xfd #xe1))

;; input/output instructions
(definst '(in a (byte)) (list #xdb *byte*))
(definst '(in a (c)) (list #xed #x78))
(definst '(in b (c)) (list #xed #x40))
(definst '(in c (c)) (list #xed #x48))
(definst '(in d (c)) (list #xed #x50))
(definst '(in) (list #xed #x58))
(definst '(in h (c)) (list #xed #x60))
(definst '(in l (c)) (list #xed #x68))
(definst '(ini) (list #xed #xa2))
(definst '(inir) (list #xed #xb2))
(definst '(ind) (list #xed #xaa))
(definst '(indr) (list #xed #xba))
(definst '(out (byte) a) (list #xd3 #x20))
(definst '(out (c) a) (list #xed #x79))
(definst '(out (c) b) (list #xed #x41))
(definst '(out (c) c) (list #xed #x49))
(definst '(out (c) d) (list #xed #x51))
(definst '(out (c) e) (list #xed #x59))
(definst '(out (c) h) (list #xed #x61))
(definst '(out (c) l) (list #xed #x69))
(definst '(outi) (list #xed #xa3))
(definst '(otir) (list #xed #xb3))
(definst '(outd) (list #xed #xab))
(definst '(otdr) (list #xed #xbb))

;; data transfer instructions
(definst '(ldi) (list #xed #xa0))
(definst '(ldir) (list #xed #xb0))
(definst '(ldd) (list #xed #xa8))
(definst '(lddr) (list #xed #xb8))

;; bit manipulation instructions
(definst '(bit 0 a) (list #xcb #x47))
(definst '(bit 0 b) (list #xcb #x40))
(definst '(bit 0 c) (list #xcb #x41))
(definst '(bit 0 d) (list #xcb #x42))
(definst '(bit 0 e) (list #xcb #x43))
(definst '(bit 0 h) (list #xcb #x44))
(definst '(bit 0 l) (list #xcb #x45))
(definst '(bit 0 (hl)) (list #xcb #x46))
(definst '(bit 0 (ix index)) (list #xdd #xcb *index* #x46))
(definst '(bit 0 (iy index)) (list #xfd #xcb *index* #x46))
(definst '(bit 1 a) (list #xcb #x4f))
(definst '(bit 1 b) (list #xcb #x48))
(definst '(bit 1 c) (list #xcb #x49))
(definst '(bit 1 d) (list #xcb #x4a))
(definst '(bit 1 e) (list #xcb #x4b))
(definst '(bit 1 h) (list #xcb #x4c))
(definst '(bit 1 l) (list #xcb #x4d))
(definst '(bit 1 (hl)) (list #xcb #x4e))
(definst '(bit 1 (ix index)) (list #xdd #xcb *index* #x4e))
(definst '(bit 1 (iy index)) (list #xfd #xcb *index* #x4e))
(definst '(bit 2 a) (list #xcb #x57))
(definst '(bit 2 b) (list #xcb #x50))
(definst '(bit 2 c) (list #xcb #x51))
(definst '(bit 2 d) (list #xcb #x52))
(definst '(bit 2 e) (list #xcb #x53))
(definst '(bit 2 h) (list #xcb #x54))
(definst '(bit 2 l) (list #xcb #x55))
(definst '(bit 2 (hl)) (list #xcb #x56))
(definst '(bit 2 (ix index)) (list #xdd #xcb *index* #x56))
(definst '(bit 2 (iy index)) (list #xfd #xcb *index* #x56))
(definst '(bit 3 a) (list #xcb #x5f))
(definst '(bit 3 b) (list #xcb #x58))
(definst '(bit 3 c) (list #xcb #x59))
(definst '(bit 3 d) (list #xcb #x5a))
(definst '(bit 3 e) (list #xcb #x5b))
(definst '(bit 3 h) (list #xcb #x5c))
(definst '(bit 3 l) (list #xcb #x5d))
(definst '(bit 3 (hl)) (list #xcb #x5e))
(definst '(bit 3 (ix index)) (list #xdd #xcb *index* #x5e))
(definst '(bit 3 (iy index)) (list #xfd #xcb *index* #x5e))
(definst '(bit 4 a) (list #xcb #x67))
(definst '(bit 4 b) (list #xcb #x60))
(definst '(bit 4 c) (list #xcb #x61))
(definst '(bit 4 d) (list #xcb #x62))
(definst '(bit 4 e) (list #xcb #x63))
(definst '(bit 4 h) (list #xcb #x64))
(definst '(bit 4 l) (list #xcb #x65))
(definst '(bit 4 (hl)) (list #xcb #x66))
(definst '(bit 4 (ix index)) (list #xdd #xcb *index* #x66))
(definst '(bit 4 (iy index)) (list #xfd #xcb *index* #x66))
(definst '(bit 5 a) (list #xcb #x6f))
(definst '(bit 5 b) (list #xcb #x68))
(definst '(bit 5 c) (list #xcb #x69))
(definst '(bit 5 d) (list #xcb #x6a))
(definst '(bit 5 e) (list #xcb #x6b))
(definst '(bit 5 h) (list #xcb #x6c))
(definst '(bit 5 l) (list #xcb #x6d))
(definst '(bit 5 (hl)) (list #xcb #x6e))
(definst '(bit 5 (ix index)) (list #xdd #xcb *index* #x6e))
(definst '(bit 5 (iy index)) (list #xfd #xcb *index* #x6e))
(definst '(bit 6 a) (list #xcb #x77))
(definst '(bit 6 b) (list #xcb #x70))
(definst '(bit 6 c) (list #xcb #x71))
(definst '(bit 6 d) (list #xcb #x72))
(definst '(bit 6 e) (list #xcb #x73))
(definst '(bit 6 h) (list #xcb #x74))
(definst '(bit 6 l) (list #xcb #x75))
(definst '(bit 6 (hl)) (list #xcb #x76))
(definst '(bit 6 (ix index)) (list #xdd #xcb *index* #x76))
(definst '(bit 6 (iy index)) (list #xfd #xcb *index* #x76))
(definst '(bit 7 a) (list #xcb #x7f))
(definst '(bit 7 b) (list #xcb #x78))
(definst '(bit 7 c) (list #xcb #x79))
(definst '(bit 7 d) (list #xcb #x7a))
(definst '(bit 7 e) (list #xcb #x7b))
(definst '(bit 7 h) (list #xcb #x7c))
(definst '(bit 7 l) (list #xcb #x7d))
(definst '(bit 7 (hl)) (list #xcb #x7e))
(definst '(bit 7 (ix index)) (list #xdd #xcb *index* #x7e))
(definst '(bit 7 (iy index)) (list #xfd #xcb *index* #x7e))
(definst '(res 0 a) (list #xcb #x87))
(definst '(res 0 b) (list #xcb #x80))
(definst '(res 0 c) (list #xcb #x81))
(definst '(res 0 d) (list #xcb #x82))
(definst '(res 0 e) (list #xcb #x83))
(definst '(res 0 h) (list #xcb #x84))
(definst '(res 0 l) (list #xcb #x85))
(definst '(res 0 (hl)) (list #xcb #x86))
(definst '(res 0 (ix index)) (list #xdd #xcb *index* #x86))
(definst '(res 0 (iy index)) (list #xfd #xcb *index* #x86))
(definst '(res 1 a) (list #xcb #x8f))
(definst '(res 1 b) (list #xcb #x88))
(definst '(res 1 c) (list #xcb #x89))
(definst '(res 1 d) (list #xcb #x8a))
(definst '(res 1 e) (list #xcb #x8b))
(definst '(res 1 h) (list #xcb #x8c))
(definst '(res 1 l) (list #xcb #x8d))
(definst '(res 1 (hl)) (list #xcb #x8e))
(definst '(res 1 (ix index)) (list #xdd #xcb *index* #x8e))
(definst '(res 1 (iy index)) (list #xfd #xcb *index* #x8e))
(definst '(res 2 a) (list #xcb #x97))
(definst '(res 2 b) (list #xcb #x90))
(definst '(res 2 c) (list #xcb #x91))
(definst '(res 2 d) (list #xcb #x92))
(definst '(res 2 e) (list #xcb #x93))
(definst '(res 2 h) (list #xcb #x94))
(definst '(res 2 l) (list #xcb #x95))
(definst '(res 2 (hl)) (list #xcb #x96))
(definst '(res 2 (ix index)) (list #xdd #xcb *index* #x96))
(definst '(res 2 (iy index)) (list #xfd #xcb *index* #x96))
(definst '(res 3 a) (list #xcb #x9f))
(definst '(res 3 b) (list #xcb #x98))
(definst '(res 3 c) (list #xcb #x99))
(definst '(res 3 d) (list #xcb #x9a))
(definst '(res 3 e) (list #xcb #x9b))
(definst '(res 3 h) (list #xcb #x9c))
(definst '(res 3 l) (list #xcb #x9d))
(definst '(res 3 (hl)) (list #xcb #x9e))
(definst '(res 3 (ix index)) (list #xdd #xcb *index* #x9e))
(definst '(res 3 (iy index)) (list #xfd #xcb *index* #x9e))
(definst '(res 4 a) (list #xcb #xa7))
(definst '(res 4 b) (list #xcb #xa0))
(definst '(res 4 c) (list #xcb #xa1))
(definst '(res 4 d) (list #xcb #xa2))
(definst '(res 4 e) (list #xcb #xa3))
(definst '(res 4 h) (list #xcb #xa4))
(definst '(res 4 l) (list #xcb #xa5))
(definst '(res 4 (hl)) (list #xcb #xa6))
(definst '(res 4 (ix index)) (list #xdd #xcb *index* #xa6))
(definst '(res 4 (iy index)) (list #xfd #xcb *index* #xa6))
(definst '(res 5 a) (list #xcb #xaf))
(definst '(res 5 b) (list #xcb #xa8))
(definst '(res 5 c) (list #xcb #xa9))
(definst '(res 5 d) (list #xcb #xaa))
(definst '(res 5 e) (list #xcb #xab))
(definst '(res 5 h) (list #xcb #xac))
(definst '(res 5 l) (list #xcb #xad))
(definst '(res 5 (hl)) (list #xcb #xae))
(definst '(res 5 (ix index)) (list #xdd #xcb *index* #xae))
(definst '(res 5 (iy index)) (list #xfd #xcb *index* #xae))
(definst '(res 6 a) (list #xcb #xb7))
(definst '(res 6 b) (list #xcb #xb0))
(definst '(res 6 c) (list #xcb #xb1))
(definst '(res 6 d) (list #xcb #xb2))
(definst '(res 6 e) (list #xcb #xb3))
(definst '(res 6 h) (list #xcb #xb4))
(definst '(res 6 l) (list #xcb #xb5))
(definst '(res 6 (hl)) (list #xcb #xb6))
(definst '(res 6 (ix index)) (list #xdd #xcb *index* #xb6))
(definst '(res 6 (iy index)) (list #xfd #xcb *index* #xb6))
(definst '(res 7 a) (list #xcb #xbf))
(definst '(res 7 b) (list #xcb #xb8))
(definst '(res 7 c) (list #xcb #xb9))
(definst '(res 7 d) (list #xcb #xba))
(definst '(res 7 e) (list #xcb #xbb))
(definst '(res 7 h) (list #xcb #xbc))
(definst '(res 7 l) (list #xcb #xbd))
(definst '(res 7 (hl)) (list #xcb #xbe))
(definst '(res 7 (ix index)) (list #xdd #xcb *index* #xbe))
(definst '(res 7 (iy index)) (list #xfd #xcb *index* #xbe))
(definst '(set 0 a) (list #xcb #xc7))
(definst '(set 0 b) (list #xcb #xc0))
(definst '(set 0 c) (list #xcb #xc1))
(definst '(set 0 d) (list #xcb #xc2))
(definst '(set 0 e) (list #xcb #xc3))
(definst '(set 0 h) (list #xcb #xc4))
(definst '(set 0 l) (list #xcb #xc5))
(definst '(set 0 (hl)) (list #xcb #xc6))
(definst '(set 0 (ix index)) (list #xdd #xcb *index* #xc6))
(definst '(set 0 (iy index)) (list #xfd #xcb *index* #xc6))
(definst '(set 1 a) (list #xcb #xcf))
(definst '(set 1 b) (list #xcb #xc8))
(definst '(set 1 c) (list #xcb #xc9))
(definst '(set 1 d) (list #xcb #xca))
(definst '(set 1 e) (list #xcb #xcb))
(definst '(set 1 h) (list #xcb #xcc))
(definst '(set 1 l) (list #xcb #xcd))
(definst '(set 1 (hl)) (list #xcb #xce))
(definst '(set 1 (ix index)) (list #xdd #xcb *index* #xce))
(definst '(set 1 (iy index)) (list #xfd #xcb *index* #xce))
(definst '(set 2 a) (list #xcb #xd7))
(definst '(set 2 b) (list #xcb #xd0))
(definst '(set 2 c) (list #xcb #xd1))
(definst '(set 2 d) (list #xcb #xd2))
(definst '(set 2 e) (list #xcb #xd3))
(definst '(set 2 h) (list #xcb #xd4))
(definst '(set 2 l) (list #xcb #xd5))
(definst '(set 2 (hl)) (list #xcb #xd6))
(definst '(set 2 (ix index)) (list #xdd #xcb *index* #xd6))
(definst '(set 2 (iy index)) (list #xfd #xcb *index* #xd6))
(definst '(set 3 a) (list #xcb #xdf))
(definst '(set 3 b) (list #xcb #xd8))
(definst '(set 3 c) (list #xcb #xd9))
(definst '(set 3 d) (list #xcb #xda))
(definst '(set 3 e) (list #xcb #xdb))
(definst '(set 3 h) (list #xcb #xdc))
(definst '(set 3 l) (list #xcb #xdd))
(definst '(set 3 (hl)) (list #xcb #xde))
(definst '(set 3 (ix index)) (list #xdd #xcb *index* #xde))
(definst '(set 3 (iy index)) (list #xfd #xcb *index* #xde))
(definst '(set 4 a) (list #xcb #xe7))
(definst '(set 4 b) (list #xcb #xe0))
(definst '(set 4 c) (list #xcb #xe1))
(definst '(set 4 d) (list #xcb #xe2))
(definst '(set 4 e) (list #xcb #xe3))
(definst '(set 4 h) (list #xcb #xe4))
(definst '(set 4 l) (list #xcb #xe5))
(definst '(set 4 (hl)) (list #xcb #xe6))
(definst '(set 4 (ix index)) (list #xdd #xcb *index* #xe6))
(definst '(set 4 (iy index)) (list #xfd #xcb *index* #xe6))
(definst '(set 5 a) (list #xcb #xef))
(definst '(set 5 b) (list #xcb #xe8))
(definst '(set 5 c) (list #xcb #xe9))
(definst '(set 5 d) (list #xcb #xea))
(definst '(set 5 e) (list #xcb #xeb))
(definst '(set 5 h) (list #xcb #xec))
(definst '(set 5 l) (list #xcb #xed))
(definst '(set 5 (hl)) (list #xcb #xee))
(definst '(set 5 (ix index)) (list #xdd #xcb *index* #xee))
(definst '(set 5 (iy index)) (list #xfd #xcb *index* #xee))
(definst '(set 6 a) (list #xcb #xf7))
(definst '(set 6 b) (list #xcb #xf0))
(definst '(set 6 c) (list #xcb #xf1))
(definst '(set 6 d) (list #xcb #xf2))
(definst '(set 6 e) (list #xcb #xf3))
(definst '(set 6 h) (list #xcb #xf4))
(definst '(set 6 l) (list #xcb #xf5))
(definst '(set 6 (hl)) (list #xcb #xf6))
(definst '(set 6 (ix index)) (list #xdd #xcb *index* #xf6))
(definst '(set 6 (iy index)) (list #xfd #xcb *index* #xf6))
(definst '(set 7 a) (list #xcb #xff))
(definst '(set 7 b) (list #xcb #xf8))
(definst '(set 7 c) (list #xcb #xf9))
(definst '(set 7 d) (list #xcb #xfa))
(definst '(set 7 e) (list #xcb #xfb))
(definst '(set 7 h) (list #xcb #xfc))
(definst '(set 7 l) (list #xcb #xfd))
(definst '(set 7 (hl)) (list #xcb #xfe))
(definst '(set 7 (ix index)) (list #xdd #xcb *index* #xfe))
(definst '(set 7 (iy index)) (list #xfd #xcb *index* #xfe))

;; bit shift instructions
(definst '(sla a) (list #xcb #x27))
(definst '(sla b) (list #xcb #x20))
(definst '(sla c) (list #xcb #x21))
(definst '(sla d) (list #xcb #x22))
(definst '(sla e) (list #xcb #x23))
(definst '(sla h) (list #xcb #x24))
(definst '(sla l) (list #xcb #x25))
(definst '(sla (hl)) (list #xcb #x26))
(definst '(sla (ix index)) (list #xdd #xcb *index* #x26))
(definst '(sla (iy index)) (list #xfd #xcb *index* #x26))
(definst '(sra a) (list #xcb #x2f))
(definst '(sra b) (list #xcb #x28))
(definst '(sra c) (list #xcb #x29))
(definst '(sra d) (list #xcb #x2a))
(definst '(sra e) (list #xcb #x2b))
(definst '(sra h) (list #xcb #x2c))
(definst '(sra l) (list #xcb #x2d))
(definst '(sra (hl)) (list #xcb2e))
(definst '(sra (ix index)) (list #xdd #xcb *index* #x2e))
(definst '(sra (iy index)) (list #xfd #xcb *index* #x2e))
(definst '(srl a) (list #xcb #x3f))
(definst '(srl b) (list #xcb #x38))
(definst '(srl c) (list #xcb #x39))
(definst '(srl d) (list #xcb #x3a))
(definst '(srl e) (list #xcb #x3b))
(definst '(srl h) (list #xcb #x3c))
(definst '(srl l) (list #xcb #x3d))
(definst '(srl (hl)) (list #xcb #x3e))
(definst '(srl (ix index)) (list #xdd #xcb *index* #x3e))
(definst '(srl (iy index)) (list #xfd #xcb *index* #x3e))
